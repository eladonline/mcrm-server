{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f72797d4a64e1a1e6030.hot-update.js","sources":["webpack:///./src/components/A_R_E/addClient.js"],"sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport { Req } from 'src/components/req';\r\n\r\nconst req = new Req();\r\n\r\nclass AddClient extends PureComponent {\r\n  state = { serverMessage: ' ' };\r\n  validateLength = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value.length >= 2) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    } else {\r\n      callback('Minimum length is 2');\r\n    }\r\n    callback();\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const data = {\r\n          url: 'api/client/add',\r\n          body: values\r\n        };\r\n        // es5 post call\r\n        req.post(data).then(({ data }) => {\r\n          this.setState({ serverMessage: data });\r\n          // reset the server message\r\n          setTimeout(() => {\r\n            this.setState({ serverMessage: ' ' });\r\n          }, 1400);\r\n\r\n          this.props.form.resetFields();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form id=\"add-client-form\">\r\n        <Form.Item label=\"Name\" hasFeedback>\r\n          {getFieldDecorator('Name', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Name is required'\r\n              },\r\n              {\r\n                validator: this.validateLength\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Name\" id=\"error\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Last name\" hasFeedback>\r\n          {getFieldDecorator('LastName', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Last name is required'\r\n              },\r\n              {\r\n                validator: this.validateLength\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Last Name\" id=\"error\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Email\" hasFeedback>\r\n          {getFieldDecorator('Email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'not a valid email'\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Email is required'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Email\" id=\"error\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Phone\" hasFeedback>\r\n          {getFieldDecorator('Phone', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Phone is required'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Phone\" id=\"error\" type=\"tel\" />)}\r\n        </Form.Item>\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" className=\"btnLight\" onClick={this.onSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <div className=\"server-response-accept\">{this.state.serverMessage}</div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'Form' })(AddClient);\r\nexport default WrappedRegistrationForm;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AADA;AANA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AADA;AANA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AANA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAhGA;AACA;AAkGA;AAAA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}