{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e0b30c2a26072847f4ab.hot-update.js","sources":["webpack:///./src/components/A_R_E/editClient.js","webpack:///./src/components/A_R_E/removeClient.js","webpack:///./src/components/find/FindByParamSelect.js"],"sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form } from 'antd';\r\nimport ClientList from 'src/components/table/ClientTable';\r\nimport { findClients, updateClients } from 'src/components/asyncs';\r\nimport EditModal from 'src/components/modals/Edit';\r\nimport ClientEditForm from 'src/components/forms/clientEdit';\r\nimport FindByParam from 'src/components/find/FindByParamSelect';\r\nclass EditClient extends PureComponent {\r\n  state = {\r\n    listOfClients: [],\r\n    serverMessage: '',\r\n    modalVisible: false,\r\n    clientSelected: {}\r\n  };\r\n  /**\r\n   * @param {object} newValues - the new client values\r\n   */\r\n  handleEditReq = newValues => {\r\n    const data = { url: `api/client/put/client`, body: newValues };\r\n    updateClients(data).then(res => {\r\n      if (res.data === 'edit successfuly') {\r\n        // call clients again to refresh the list\r\n\r\n        const { select } = this.searchValues();\r\n        const params = {\r\n          url: `api/client/query/find?${select}=${this.state.clientSelected[select]}`\r\n        };\r\n\r\n        this.findClientsCall(params);\r\n        // reset the values to default (which is the selected client)\r\n        this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * sets the client object in the state\r\n   * and open the modal\r\n   * @param {number} index - index of the client in the  listOfClients (state)\r\n   */\r\n  handleEditClick = index => {\r\n    const client = this.state.listOfClients[index];\r\n\r\n    // show modal and update client select\r\n    this.setState({ modalVisible: true, clientSelected: client });\r\n  };\r\n  /**\r\n   * close the modal when click on cancel button\r\n   */\r\n  handleModalClose = () => {\r\n    this.setState({ modalVisible: false });\r\n  };\r\n\r\n  /**\r\n   * submit the changes after clicking the modal ok\r\n   */\r\n  handleAccepet = () => {\r\n    // here will be the submit of the edit call\r\n    const { clientSelected } = this.state;\r\n    const newValues = this.clientValues();\r\n    // update new values to over old\r\n    const newClient = { ...clientSelected, ...newValues };\r\n    this.handleEditReq(newClient);\r\n  };\r\n\r\n  handleFindClientResults = (val, props) => {\r\n    this.setState({ listOfClients: [...val], ...props });\r\n  };\r\n  // call to find clients and set them in state\r\n  findClientsCall = data => {\r\n    findClients(data, (val, props) => this.setState({ listOfClients: [...val], ...props }));\r\n  };\r\n  // get the values in the search inputs\r\n  searchValues() {\r\n    return this.props.form.getFieldsValue(['select', 'value']);\r\n  }\r\n  /**\r\n   * @return get client fields values\r\n   */\r\n  clientValues() {\r\n    return this.props.form.getFieldsValue(['Name', 'LastName', 'Email', 'Phone']);\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { modalVisible, serverMessage, listOfClients, clientSelected } = this.state;\r\n\r\n    return (\r\n      <div className=\"edit-client\">\r\n        <Form id=\"edit-client-form\">\r\n          <FindByParam form={this.props.form} handleResults={this.handleFindClientResults} />\r\n        </Form>\r\n\r\n        {/** list of the Users found in DB */}\r\n        <ClientList type=\"EDIT\" handleClick={this.handleEditClick} list={listOfClients} />\r\n        {/** server Message */}\r\n        <div className=\"server-response-reject\">{serverMessage}</div>\r\n        {/** the form of the client wit edit option */}\r\n        <EditModal\r\n          handleAccepet={this.handleAccepet}\r\n          handleClose={this.handleModalClose}\r\n          visible={modalVisible}\r\n        >\r\n          <ClientEditForm\r\n            form={this.props.form}\r\n            handleFieldsChange={this.handleFieldsChange}\r\n            {...clientSelected}\r\n          />\r\n        </EditModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'Form' })(EditClient);\r\nexport default WrappedRegistrationForm;\r\n","import React, { PureComponent } from 'react';\r\nimport { Form, Input, Select } from 'antd';\r\nimport { Req } from 'src/components/req';\r\nimport ClientList from 'src/components/table/ClientTable';\r\nimport { deleteClient } from 'src/components/asyncs';\r\nimport FindByParam from 'src/components/find/FindByParamSelect';\r\n\r\nconst req = new Req();\r\n\r\nclass RemoveClient extends PureComponent {\r\n  state = { listOfClients: [], serverMessage: '' };\r\n\r\n  handleDeleteReq = (index, id) => {\r\n    // req.delete(`api/client/delete/${id}`);\r\n    deleteClient(`api/client/delete/${id}`, res => {\r\n      // deleted successfuly\r\n      if (res.data === 'deleted successfuly') {\r\n        // update the UI\r\n        const state = this.state;\r\n        state.listOfClients.splice(index, 1);\r\n        this.setState({ listOfClients: [...state.listOfClients] });\r\n\r\n        // deleted unsuccessfuly\r\n      } else {\r\n        this.setState({ listOfClients: [], serverMessage: res.data });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleFindClientResults = (val, props) => {\r\n    this.setState({ listOfClients: [...val], ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"remove-client\">\r\n        {/**Find: render select and input */}\r\n        <Form id=\"remove-client-form\">\r\n          <FindByParam form={this.props.form} handleResults={this.handleFindClientResults} />\r\n        </Form>\r\n\r\n        {/** list of the Users found in DB */}\r\n        <ClientList\r\n          type=\"DELETE\"\r\n          handleClick={this.handleDeleteReq}\r\n          list={this.state.listOfClients}\r\n        />\r\n        {/** server Message */}\r\n        <div className=\"server-response-reject\">{this.state.serverMessage}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'Form' })(RemoveClient);\r\nexport default WrappedRegistrationForm;\r\n","import React, { PureComponent } from 'react';\r\nimport { findClients } from 'src/components/asyncs';\r\nimport { Form, Input, Select } from 'antd';\r\n\r\nexport default class Find extends PureComponent {\r\n  state = { listOfClients: [], serverMessage: '' };\r\n  findClientsCall = data => {\r\n    findClients(data, this.props.handleResults);\r\n  };\r\n  /**\r\n   * find the all clients\r\n   */\r\n  onSubmitFind = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const { select, value } = values;\r\n        const data = {\r\n          url: `api/client/query/find?${select}=${value}`\r\n        };\r\n\r\n        this.findClientsCall(data);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <>\r\n        <Form.Item label=\"Find by\">\r\n          {getFieldDecorator('select', {\r\n            rule: [{ required: true, message: 'Please select property' }]\r\n          })(\r\n            <Select\r\n              onChange={() => this.setState({ serverMessage: '' })}\r\n              placeholder=\"Please select a search method\"\r\n            >\r\n              <Select.Option value=\"name\">Name</Select.Option>\r\n              <Select.Option value=\"lastName\">Last name</Select.Option>\r\n              <Select.Option value=\"phone\">Phone</Select.Option>\r\n              <Select.Option value=\"email\">Email</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"value\">\r\n          {getFieldDecorator('value', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'value is required'\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Value\" />)}\r\n        </Form.Item>\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" className=\"btnLight\" onClick={this.onSubmitFind}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","sourceRoot":""}